version: "3.4"
services:

  blazegraph:
    image: docker.io/robcast/researchspace-blazegraph:2.2.0-20160908
    container_name: ${PROJECT_NAME}_blazegraph
    restart: unless-stopped
    environment:
      - JAVA_OPTS=-Xmx8g
    healthcheck:
      test: wget -q http://0.0.0.0:8080/blazegraph/sparql?query=SELECT%20%3Fs%20WHERE%20%7B%0A%20%20%3Fs%20%3Fp%20%3Fo%20%0A%7D%20LIMIT%2010 || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 2
      start_period: 40s
    labels:
      - "autoheal=true"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
    networks:
    - internal
    volumes:
      - blazegraph-data:/blazegraph-data
      - ./data:/data

  blazegraph-secondary:
    image: docker.io/robcast/researchspace-blazegraph:2.2.0-20160908
    container_name: ${PROJECT_NAME}_blazegraph_secondary
    restart: unless-stopped
    environment:
      - JAVA_OPTS=-Xmx4g
    healthcheck:
      test: wget -q http://0.0.0.0:8080/blazegraph/sparql?query=SELECT%20%3Fs%20WHERE%20%7B%0A%20%20%3Fs%20%3Fp%20%3Fo%20%0A%7D%20LIMIT%2010 || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 2
      start_period: 40s
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
    labels:
      - "autoheal=true"
    networks:
    - internal
    volumes:
      - blazegraph-secondary-data:/blazegraph-data
      - ./data:/data

  jobs:
    build: ./services/jobs
    container_name: ${PROJECT_NAME}_jobs
    image: docker.io/swissartresearx/bso-jobs:1.0.2
    restart: unless-stopped
    environment:
      - HOST_LOCATION=${HOST_NAME}
    healthcheck:
      test: task --list || exit 1
      interval: 10m
      timeout: 30s
      retries: 2
      start_period: 40s
    networks:
    - internal
    volumes:
      - ./services/researchplatform/apps:/apps
      - ./data:/data
      - ./mapping:/mapping
      - ./scripts:/scripts
      - ./static:/static
      - ./services/researchplatform/apps/bso/src:/bso-app-src

  platform:
    image: docker.io/swissartresearx/metaphacts-community:4.3.0
    container_name: ${PROJECT_NAME}_platform
    environment:
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_HOST: ${HOST_NAME}
      VIRTUAL_HOST: ${HOST_NAME}
      VIRTUAL_PORT: 8080
      JAVA_OPTS: -Xmx1g
    healthcheck:
      test: wget -q http://0.0.0.0:8080 || exit 1
      interval: 1m30s
      timeout: 30s
      retries: 2
      start_period: 40s
    restart: unless-stopped
    labels:
      - "autoheal=true"
    depends_on:
      - blazegraph
      - blazegraph-secondary
      - smapshotapi
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
    networks:
    - internal
    - proxy
    volumes:
      - platform-data:/runtime-data
      - ./services/researchplatform/apps:/apps

  smapshotapi:
    build: ./services/smapshotapi
    container_name: ${PROJECT_NAME}_smapshotapi
    image: docker.io/swissartresearx/bso-smapshotapi:1.1.0
    environment:
      SMAPSHOT_ENDPOINT: ${SMAPSHOT_ENDPOINT}
      SMAPSHOT_TOKEN: ${SMAPSHOT_TOKEN}
      SPARQL_ENDPOINT: http://blazegraph:8080/blazegraph/sparql
      SMAPSHOT_NAMEDGRAPH: ${SMAPSHOT_IMAGE_GRAPH}
      CONTENT_SECURITY_POLICY: "default-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: https://connectors.tableau.com/; img-src 'self' https: data: blob:; connect-src 'self' https://www.e-manuscripta.ch https://smapshot.heig-vd.ch bso-iiif.swissartresearch.net; style-src-elem 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com;"
    healthcheck:
      test: wget -q http://0.0.0.0:5000 || exit 1
      interval: 5m
      timeout: 10s
      retries: 2
      start_period: 40s
    labels:
      - "autoheal=true"
    networks:
    - internal
    restart: unless-stopped
    volumes:
      - ./services/smapshotapi/src:/src

networks:
  internal:
  proxy:
    external:
      name: sari_proxy_network
      
volumes:
  3m-data:
  3m-db:
  blazegraph-data:
  blazegraph-secondary-data:
  platform-data:
  
