# https://taskfile.dev

version: '3'

vars:
  ENDPOINT: http://blazegraph:8080/blazegraph/sparql
  GENERATOR_POLICY: /mapping/generator-policy.xml

tasks:

  add-relations:
    desc: Materialise triples defined through the queries/addRelations.sparql query in the Blazegraph instance
    cmds:
      - task: run-query-from-file
        vars: {FILE: "queries/addRelations.sparql"}

  cleanup:
    desc: Run Cleanup query (located in queries/cleanup.sparql)
    cmds:
      - task: run-query-from-file
        vars: {FILE: "queries/cleanup.sparql"}

  delete-field-definitions:
    desc: Delete the field definitions from the Blazegraph instance
    cmds:
      - task: run-query-from-file
        vars: {FILE: "queries/deleteFieldDefinitions.sparql"}

  download-iiif-manifests:
    desc: Downloads the IIIF Manifests found in the ZBZ data source file
    vars:
      IIIF_MANIFESTS_FROM: 0
      IIIF_MANIFEST_TO: 9999
    sources:
      - /data/source/sari_abzug-utf-8_23_04-tsv.json
    generates:
      - /data/manifests/*.json
    cmds:
      - python /scripts/cache-iiif-manifests.py {{.IIIF_MANIFESTS_FROM}} {{.IIIF_MANIFESTS_TO}}

  ingest-data:
    cmds:
      - |
        numfiles=$(ls -l {{.FOLDER}}/*.ttl | wc -l)
        count=1
        curl --silent -X POST {{.ENDPOINT}} --data-urlencode "update=DELETE { ?s ?p ?o } WHERE { GRAPH <{{.GRAPH}}> { ?s ?p ?o } }" > /dev/null
        for f in $(ls -1 {{.FOLDER}}/*.ttl); do
          echo "Ingesting file $count of $numfiles ($f)"
          curl --silent -X POST --data-binary "uri=file://$f" {{.ENDPOINT}}?context-uri={{if .GRAPH}}{{.GRAPH}}{{else}}file://$f{{end}} > /dev/null
          count=$((count+1)) 
        done

  ingest-data-additional:
    desc: Ingest the TTL files located in the data/ttl/additional folder to the Blazegraph instance
    sources:
      - /data/ttl/additional/*.ttl
    cmds:
      - echo "Ingest additional data"
      - task: ingest-data
        vars: 
          FOLDER: /data/ttl/additional
          GRAPH: https://resource.swissartresearch.net/graph/external

  ingest-data-main:
    desc: Ingest the TTL files located in the data/ttl/main folder to the Blazegraph instance
    sources:
      - /data/ttl/main/*/*.ttl
    cmds:
      - echo "Ingest main data"
      - task: ingest-data-nb
      - task: ingest-data-zbz

  ingest-data-nb:
    desc: Ingest the TTL files located in the data/ttl/main/nb folder to the Blazegraph instance
    sources:
      - /data/ttl/main/nb/*.ttl
    cmds:
      - task: ingest-data
        vars: 
          FOLDER: /data/ttl/main/nb
          GRAPH: https://resource.swissartresearch.net/graph/nb

  ingest-data-nb-as-individual-graphs:
    desc: Ingest the TTL files located in the data/ttl/main/nb folder to the Blazegraph instance, placing each file into an individual named graph
    sources:
      - /data/ttl/main/nb/*.ttl
    cmds:
      - task: ingest-data
        vars: 
          FOLDER: /data/ttl/main/nb

  ingest-data-zbz:
    desc: Ingest the TTL files located in the data/ttl/main/zbz folder to the Blazegraph instance
    sources:
      - /data/ttl/main/zbz/*.ttl
    cmds:
      - task: ingest-data
        vars: 
          FOLDER: /data/ttl/main/zbz
          GRAPH: https://resource.swissartresearch.net/graph/zbz

  ingest-data-zbz-as-individual-graphs:
    desc: Ingest the TTL files located in the data/ttl/main/zbz folder to the Blazegraph instance, placing each file into an individual named graph
    sources:
      - /data/ttl/main/zbz/*.ttl
    cmds:
      - task: ingest-data
        vars: 
          FOLDER: /data/ttl/main/zbz

  mapping-zbz:
    desc: Map ZBZ XML data to CIDOC/RDF
    vars:
      INPUT_FOLDER: /data/xml/zbz
      OUTPUT_FOLDER: /data/ttl/main/zbz
      MAPPING_FILE: /mapping/mappings-zbz.x3ml
      BATCHSIZE: 20
    sources:
      - /data/xml/zbz/*.xml
      - /mapping/mappings-zbz.x3ml
    generates:
      - /data/ttl/main/zbz/*.ttl
    cmds:
      - bash /scripts/performMapping.sh -i {{.INPUT_FOLDER}} -o {{.OUTPUT_FOLDER}} -m {{.MAPPING_FILE}} -g {{.GENERATOR_POLICY}} -b {{.BATCHSIZE}}

  mapping-nb:
    desc: Map SNB XML data to CIDOC/RDF
    vars:
      INPUT_FOLDER: /data/xml/nb
      OUTPUT_FOLDER: /data/ttl/main/nb
      MAPPING_FILE: /mapping/mappings-nb.x3ml
      BATCHSIZE: 20
    sources:
      - /data/xml/nb/*.xml
      - /mapping/mappings-nb.x3ml
    generates:
      - /data/ttl/main/nb/*.ttl
    cmds:
      - bash /scripts/performMapping.sh -i {{.INPUT_FOLDER}} -o {{.OUTPUT_FOLDER}} -m {{.MAPPING_FILE}} -g {{.GENERATOR_POLICY}} -b {{.BATCHSIZE}}
  
  materialise-field-definitions:
    desc: Materialises the field definitions as propertes in the graph
    vars:
      FIELD_DEFINITIONS: /bso-app-src/fieldDefinitions.yml
      GRAPH: https://resource.swissartresearch.net/graph/fields
      QUERY:
        sh: python /scripts/generate-materialise-query-from-field-definitions.py {{.FIELD_DEFINITIONS}} {{.GRAPH}}
    cmds:
      - curl -X POST {{.ENDPOINT}} --data-urlencode "update={{.QUERY}}" 

  prepare-xml-records-zbz:
    desc: Convert the ZBZ data from JSON to individual XML Records
    sources:
      - /data/source/sari_abzug-utf-8_23_04-tsv.json
      - /scripts/prepare-xml-records-zbz.py
    generates:
      - /data/xml/zbz/*.xml
    cmds:
      - python /scripts/prepare-xml-records-zbz.py {{.RECORDS_LIMIT}} {{.RECORDS_OFFSET}}

  prepare-xml-records-nb:
    desc: Extract individual records from the NB data
    sources:
      - /data/source/nb-records.xml
      - /scripts/prepare-xml-records-nb.py
    generates:
      - /data/xml/nb/*.xml
    cmds:
      - python /scripts/prepare-xml-records-nb.py {{.RECORDS_LIMIT}} {{.RECORDS_OFFSET}}

  retrieve-gnd:
    desc: Extracts relevant data from GND based on identifiers found in the mapped TTL files
    cmds:
      - python /scripts/extract-gnd-data.py

  retrieve-wikidata:
    desc: Extracts relevant data from Wikidata based on identifiers found in the mapped TTL files
    cmds:
      - python /scripts/extract-wd-data.py

  run-query-from-file:
    vars:
      QUERY:
        sh: cat {{.FILE}}
    cmds:
      - curl -X POST {{.ENDPOINT}} --data-urlencode "update={{.QUERY}}" 
    
