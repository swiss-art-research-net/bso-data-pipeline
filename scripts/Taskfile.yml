# https://taskfile.dev

version: '3'

dotenv: ['.env']

vars:
  GENERATOR_POLICY: /mapping/generator-policy.xml

tasks:

  download-iiif-manifests:
    cmds:
      - python /scripts/cache-iiif-manifests.py {{.IIIF_MANIFESTS_FROM}} {{.IIIF_MANIFESTS_TO}}

  preprocessing-zbz-to-xml:
    cmds:
      - python /scripts/json-to-xml.py

  mapping-zbz:
    vars:
      INPUT_FOLDER: /data/xml/zbz
      OUTPUT_FOLDER: /data/ttl/main
      MAPPING_FILE: /mapping/mappings-zbz.x3ml
      BATCHSIZE: 20
    cmds:
      - bash /scripts/performMapping.sh -i {{.INPUT_FOLDER}} -o {{.OUTPUT_FOLDER}} -m {{.MAPPING_FILE}} -g {{.GENERATOR_POLICY}} -b {{.BATCHSIZE}}

  mapping-nb:
    vars:
      INPUT_FOLDER: /data/xml/nb
      OUTPUT_FOLDER: /data/ttl/main
      MAPPING_FILE: /mapping/mappings-nb.x3ml
      BATCHSIZE: 20
    cmds:
      - bash /scripts/performMapping.sh -i {{.INPUT_FOLDER}} -o {{.OUTPUT_FOLDER}} -m {{.MAPPING_FILE}} -g {{.GENERATOR_POLICY}} -b {{.BATCHSIZE}}

  post-retrieve-gnd:
    cmds:
      - python /scripts/extract-gnd-data.py

  post-retrieve-wikidata:
    cmds:
      - python /scripts/extract-wd-data.py

  ingest-data-main:
    cmds:
      - echo "Ingest main data"
      - task: ingest-data
        vars: {FOLDER: "/data/ttl/main"}

  ingest-data-additional:
    cmds:
      - echo "Ingest additional data"
      - task: ingest-data
        vars: {FOLDER: "/data/ttl/additional"}

  ingest-data:
    vars:
      ENDPOINT: http://blazegraph:8080/blazegraph/sparql
      FOLDER: "/data/ttl"

    cmds:
      - |
        numfiles=$(ls -l {{.FOLDER}}/*.ttl | wc -l)
        count=1
        for f in $(ls -1 {{.FOLDER}}/*.ttl); do
          echo "Ingesting file $count of $numfiles ($f)"
          curl --silent -X POST {{.ENDPOINT}} --data-urlencode "update=DELETE { ?s ?p ?o } WHERE { GRAPH <file:/$f> { ?s ?p ?o } }" > /dev/null
          curl --silent -X POST --data-binary "uri=file://$f" {{.ENDPOINT}} > /dev/null
          count=$((count+1)) 
        done

